swagger: '2.0'
info:
  title: DrFirst Business Case API
  description: API for DrFirst Business Case Generator backend, exposed via API Gateway
  version: v1.0.0
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json

# Define security schemes (JWT Bearer for Firebase)
securityDefinitions:
  firebaseIdToken:
    type: apiKey
    name: Authorization
    in: header
    description: "Firebase ID token (JWT). Prefix with 'Bearer '. Example: 'Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImFiY...'."

paths:
  /health:
    get:
      summary: Health check for the backend service
      operationId: healthCheck
      x-google-backend:
        address: https://drfirst-backend-api-14237270112.us-central1.run.app
        path_translation: APPEND_PATH_TO_ADDRESS # Ensures /health is appended
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              status:
                type: string
              version:
                type: string
        default:
          description: Unexpected error
          schema:
            type: object
            properties:
              message:
                type: string
  /api/v1/agents/invoke:
    post:
      summary: Invoke an agent action via the Orchestrator
      operationId: invokeAgentAction
      # Apply the security scheme to this endpoint
      security:
        - firebaseIdToken: []
      x-google-backend:
        address: https://drfirst-backend-api-14237270112.us-central1.run.app
        path_translation: APPEND_PATH_TO_ADDRESS # Ensures /api/v1/agents/invoke is appended
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - request_type
              - payload
            properties:
              request_type:
                type: string
                description: "The type of request to the agent (e.g., echo, initiate_case)"
              payload:
                type: object
                description: "Payload specific to the request_type"
                example: { "input_text": "Hello World" }
      responses:
        '200':
          description: Successful agent invocation
          schema:
            type: object # Define a more specific schema if possible
        '400':
          description: Bad Request (e.g., missing fields)
        '401':
          description: Unauthorized (e.g., invalid token)
        '500':
          description: Internal Server Error

  /api/v1/cases:  # New endpoint for listing cases
    get:
      summary: List business cases for the authenticated user
      operationId: listUserCases
      security:
        - firebaseIdToken: [] # Protected by Firebase ID token
      produces:
        - application/json
      responses:
        '200':
          description: A list of business case summaries
          schema:
            type: array
            items:
              $ref: '#/definitions/BusinessCaseSummary' # Reference the definition
        '401':
          description: Unauthorized (e.g., invalid token)
        '500':
          description: Internal Server Error

  /api/v1/cases/{case_id}: # New endpoint for specific case details
    get:
      summary: Get full details for a specific business case
      operationId: getCaseDetailsById
      security:
        - firebaseIdToken: []
      parameters:
        - name: case_id
          in: path
          required: true
          description: ID of the business case to retrieve
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved business case details
          schema:
            $ref: '#/definitions/BusinessCaseDetails'
        '401':
          description: Unauthorized (e.g., invalid token)
        '403':
          description: Forbidden (e.g., user does not have permission to view this case)
        '404':
          description: Business case not found
        '500':
          description: Internal Server Error

    put: # New PUT operation to update PRD
      summary: Update the PRD draft for a specific business case
      operationId: updatePrdDraft
      security:
        - firebaseIdToken: []
      parameters:
        - name: case_id
          in: path
          required: true
          description: ID of the business case whose PRD is to be updated
          type: string
        - name: body
          in: body
          required: true
          description: The updated PRD content
          schema:
            $ref: '#/definitions/PrdUpdateRequest'
      produces:
        - application/json
      consumes:
        - application/json
      responses:
        '200':
          description: PRD draft updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
              updated_prd_draft:
                type: object # Or $ref to a more specific PRD draft model if defined
                properties:
                  title:
                    type: string
                  content_markdown:
                    type: string
                  version:
                    type: string
        '400':
          description: Bad Request (e.g., invalid input)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (e.g., user does not have permission to edit this case)
        '404':
          description: Business case not found
        '500':
          description: Internal Server Error

  /api/v1/admin/rate-cards: # New admin endpoint for rate cards
    get:
      summary: List all rate cards (admin only)
      operationId: listRateCards
      security:
        - firebaseIdToken: []
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved list of rate cards
          schema:
            type: array
            items:
              $ref: '#/definitions/RateCard'
        '401':
          description: Unauthorized (e.g., invalid token)
        '403':
          description: Forbidden (e.g., user does not have admin access)
        '500':
          description: Internal Server Error

  /api/v1/admin/pricing-templates: # New admin endpoint for pricing templates
    get:
      summary: List all pricing templates (admin only)
      operationId: listPricingTemplates
      security:
        - firebaseIdToken: []
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved list of pricing templates
          schema:
            type: array
            items:
              $ref: '#/definitions/PricingTemplate'
        '401':
          description: Unauthorized (e.g., invalid token)
        '403':
          description: Forbidden (e.g., user does not have admin access)
        '500':
          description: Internal Server Error

# Define data models used in responses or requests
definitions:
  BusinessCaseSummary:
    type: object
    properties:
      case_id:
        type: string
        description: "Unique ID of the business case."
      user_id:
        type: string
        description: "ID of the user who initiated the case."
      title:
        type: string
        description: "Title of the business case."
      status:
        type: string
        description: "Current status of the business case (e.g., INTAKE, PRD_DRAFTING)."
      created_at:
        type: string
        format: date-time
        description: "Timestamp of case creation."
      updated_at:
        type: string
        format: date-time
        description: "Timestamp of last update."
    required:
      - case_id
      - user_id
      - title
      - status
      - created_at
      - updated_at

  BusinessCaseDetails:
    type: object
    properties:
      case_id:
        type: string
        description: "Unique ID of the business case."
      user_id:
        type: string
        description: "ID of the user who initiated the case."
      title:
        type: string
        description: "Title of the business case."
      problem_statement:
        type: string
        description: "Problem statement for the case."
      relevant_links:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            url:
              type: string
        description: "Relevant links provided by user."
      status:
        type: string
        description: "Current status of the business case (e.g., INTAKE, PRD_DRAFTING)."
      history:
        type: array
        items:
          type: object
          # additionalProperties: true # Keeps it flexible
          properties: # More defined history item structure
            timestamp:
              type: string
              format: date-time
            source:
              type: string
              enum: [USER, AGENT, PRODUCT_MANAGER_AGENT, ORCHESTRATOR_AGENT] # Example sources
            type:
              type: string
              enum: [STATUS_UPDATE, TEXT, PROMPT, PRD_DRAFT, ERROR] # Example types
            content:
              type: string # Or object for structured content
        description: "History of agent interactions and status changes."
      prd_draft:
        type: object
        # additionalProperties: true # Keeps it flexible
        properties:
          title:
            type: string
          content_markdown:
            type: string
          version:
            type: string
        description: "Generated PRD draft content. Can be null."
        nullable: true # Explicitly state that prd_draft can be null
      created_at:
        type: string
        format: date-time
        description: "Timestamp of case creation."
      updated_at:
        type: string
        format: date-time
        description: "Timestamp of last update."
    required:
      - case_id
      - user_id
      - title
      - problem_statement
      - status
      - history
      - created_at
      - updated_at

  PrdUpdateRequest: # Definition for the PRD update request body
    type: object
    required:
      - content_markdown
    properties:
      content_markdown:
        type: string
        description: "The new markdown content for the PRD draft."
      # version: # Optional: if client can suggest a version
      #   type: string
      #   description: "Optional new version for the PRD draft."

  RateCard: # Definition for rate card model
    type: object
    properties:
      id:
        type: string
        description: "Unique ID of the rate card."
      name:
        type: string
        description: "Name of the rate card."
      description:
        type: string
        description: "Description of the rate card."
      isActive:
        type: boolean
        description: "Whether the rate card is currently active."
      defaultOverallRate:
        type: number
        format: float
        description: "Default hourly rate for unknown roles."
      roles:
        type: array
        items:
          type: object
          properties:
            roleName:
              type: string
            hourlyRate:
              type: number
              format: float
        description: "List of role-specific hourly rates."
      created_at:
        type: string
        format: date-time
        description: "Timestamp of rate card creation."
      updated_at:
        type: string
        format: date-time
        description: "Timestamp of last update."
    required:
      - id
      - name
      - description
      - isActive
      - defaultOverallRate
      - roles

  PricingTemplate: # Definition for pricing template model
    type: object
    properties:
      id:
        type: string
        description: "Unique ID of the pricing template."
      name:
        type: string
        description: "Name of the pricing template."
      description:
        type: string
        description: "Description of the pricing template."
      version:
        type: string
        description: "Version of the pricing template."
      structureDefinition:
        type: object
        description: "Structure definition for the pricing template."
        properties:
          type:
            type: string
          scenarios:
            type: array
            items:
              type: object
      created_at:
        type: string
        format: date-time
        description: "Timestamp of template creation."
      updated_at:
        type: string
        format: date-time
        description: "Timestamp of last update."
    required:
      - id
      - name
      - description
      - version
      - structureDefinition 